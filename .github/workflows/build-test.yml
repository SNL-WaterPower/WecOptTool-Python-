# Check: package builds, tests pass, documentation builds.
# Report: test coverage
name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test:
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest",] # "ubuntu-latest", "macos-latest",
        python-version: ["3.9", "3.10"]  # when updated change lines marked with "# PyVer"

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install libglu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libglu1
      # TODO: Why is this needed? Fix upstream package?

    - name: Install GNU Fortran on MacOS
      # for capytaine and wavespectra
      if: matrix.os == 'macos-latest'
      uses: modflowpy/install-gfortran-action@v1

    - name: Install MinGW on Windows
      if: matrix.os == 'windows-latest'
      uses: egor-tensin/setup-mingw@v2

    - name: Install MinGW on Windows
      if: matrix.os == 'windows-latest'
      run: |
        echo [build]
        echo compiler=mingw32

    # - name: Use Conda on Windows for Capytaine instead of Fortran compilation
    #   if: matrix.os == 'windows-latest'
    #   uses: conda-incubator/setup-miniconda@v2
    #   run: conda install capytaine

    - name: Install WecOptTool
      shell: bash -l {0}
      run: |
        python3 -m pip install --upgrade pip
        pip3 install coveralls pytest
        pip3 install .
        pip3 install wavespectra # TODO

    - name: Run Test
      shell: bash -l {0}
      run: |
        coverage run -m pytest

    # - name: Upload coverage data to coveralls.io
    #   if: ${{ matrix.python-version == 3.10  &&  matrix.os == 'ubuntu-latest' }}  # PyVer
    #   shell: bash -l {0}
    #   run: |
    #     coveralls --service=github
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     COVERALLS_PARALLEL: true

  # coveralls:
  #   name: Indicate completion to coveralls.io
  #   needs: build
  #   runs-on: ubuntu-latest
  #   container: python:3-slim
  #   steps:
  #   - name: Finished
  #     run: |
  #       python3 -m pip install --upgrade coveralls
  #       coveralls --finish
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # documentation:
  #   name: Build documentation
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.10'  # PyVer

  #   - name: Install WecOptTool for documentation
  #     shell: bash -l {0}
  #     run: |
  #       python3 -m pip install --upgrade pip
  #       pip3 install .[dev]

  #   - name: Build documentation
  #     shell: bash -l {0}
  #     run: |
  #       cd docs
  #       make clean
  #       make linkcheck
  #       make html
  #       cd ../
