import autograd.numpy as np

def h_poly_helper(tt):
  A = np.array([
      [1, 0, -3, 2],
      [0, 1, -2, 1],
      [0, 0, 3, -2],
      [0, 0, -1, 1]
      ], dtype=tt[-1].dtype)
  return [
    sum( A[i, j]*tt[j] for j in range(4) )
    for i in range(4) ]

def h_poly(t):
  tt = [ None for _ in range(4) ]
  tt[0] = 1
  for i in range(1, 4):
    tt[i] = tt[i-1]*t
  return h_poly_helper(tt)

def H_poly(t):
  tt = [ None for _ in range(4) ]
  tt[0] = t
  for i in range(1, 4):
    tt[i] = tt[i-1]*t*i/(i+1)
  return h_poly_helper(tt)

def interp_func(x, y):
  "Returns integral of interpolating function"
  if len(y)>1:
    m = (y[1:] - y[:-1])/(x[1:] - x[:-1])
    m = np.concatenate([m[[0]], (m[1:] + m[:-1])/2, m[[-1]]])
  def f(xs):
    if len(y)==1: # in the case of 1 point, treat as constant function
      return y[0] + np.zeros_like(xs)
    I = np.searchsorted(x[1:], xs)
    dx = (x[I+1]-x[I])
    hh = h_poly((xs-x[I])/dx)
    return hh[0]*y[I] + hh[1]*m[I]*dx + hh[2]*y[I+1] + hh[3]*m[I+1]*dx
  return f

def interp(x, y, xs):
  return interp_func(x,y)(xs)

def interp2d(interp1d, xdata, ydata, fdata, xpt, ypt):

  # for i in range(ydata.size):
  #     yinterp[i, :] .= interp1d(xdata, fdata[:, i], xpt)
  
  yinterp = [interp1d(xdata,fdata[:, ii],xpt) for ii in range(ydata.size)]

  # for i in range(xpt.size):
  #     output[i, :] .= interp1d(ydata, yinterp[:, i], ypt)
  
  output = [interp1d(ydata,yinterp[:, ii],ypt) for ii in range(xpt.size)]

  return output

# def integ_func(x, y):
#   "Returns interpolating function"
#   if len(y)>1:
#     m = (y[1:] - y[:-1])/(x[1:] - x[:-1])
#     m = np.concatenate([m[[0]], (m[1:] + m[:-1])/2, m[[-1]]])
#     Y = np.zeros_like(y)
#     Y[1:] = (x[1:]-x[:-1])*(
#         (y[:-1]+y[1:])/2 + (m[:-1] - m[1:])*(x[1:]-x[:-1])/12
#         )
#     Y = Y.cumsum(0)
#   def f(xs):
#     if len(y)==1:
#       return y[0]*(xs - x[0])
#     I = np.searchsorted(x[1:].detach(), xs)
#     dx = (x[I+1]-x[I])
#     hh = H_poly((xs-x[I])/dx)
#     return Y[I] + dx*(
#         hh[0]*y[I] + hh[1]*m[I]*dx + hh[2]*y[I+1] + hh[3]*m[I+1]*dx
#         )
#   return f

# def integ(x, y, xs):
#   return integ_func(x,y)(xs)

# Example
if __name__ == "__main__":
    import matplotlib.pylab as P # for plotting
    x = np.linspace(0, 6, 7)
    # x = np.array([-10000.0,
    # -100.0,
    # -50.0,
    # -20.0,
    # -10.0,
    # 0.0,
    # 0.012668019,
    # 0.03426608,
    # 0.045142045,
    # 0.057553153,
    # 0.071173399,
    # 0.085301268,
    # 0.097366303,
    # 0.118841776,
    # 0.129754941,
    # 0.139778827,
    # 0.158789719,
    # 0.169510357,
    # 0.179040696,
    # 0.19001597,
    # 0.20320735,
    # 0.217075432,
    # 0.235373075,
    # 0.243281766,
    # 0.261535771,
    # 0.276437612,
    # 0.28738014,
    # 0.309746514,
    # 0.314496222,
    # 0.330525042,
    # 0.346010286,
    # 0.35791277,
    # 0.39363278,
    # 0.426007626,
    # 0.432751135,
    # 0.448256149,
    # 0.472991905,
    # 0.49238604,
    # 0.506538082,
    # 0.522258542,
    # 0.541141927,
    # 0.559711436,
    # 0.587280356,
    # 0.603243099,
    # 0.623148907,
    # 0.643251111,
    # 0.66566147,
    # 0.680382139,
    # 0.702029778,
    # 0.72676211,
    # 0.75149701,
    # 0.778443456,
    # 0.802495913,
    # 0.830306138,
    # 0.859654739,
    # 0.890547726,
    # 0.921439344,
    # 0.953872962,
    # 0.987842604,
    # 1.021805398,
    # 1.055763211,
    # 1.089717911,
    # 1.123670121,
    # 1.157624821,
    # 1.191565203,
    # 1.225508697,
    # 1.259449701,
    # 1.293384479,
    # 1.327313966,
    # 1.361237849,
    # 1.395167335,
    # 1.429090907,
    # 1.463007631,
    # 1.496926223,
    # 1.530844503,
    # 1.564760293,
    # 1.598674838,
    # 1.632587515,
    # 1.666499881,
    # 1.700410691,
    # 1.734322745,
    # 1.768229819,
    # 1.802136271,
    # 1.836043345,
    # 1.869948551,
    # 1.903858116,
    # 1.937757408,
    # 1.971661992,
    # 2.005578093,
    # 2.039467113,
    # 2.073365782,
    # 2.107270366,
    # 2.14117246,
    # 2.175075487,
    # 2.208974156,
    # 2.242872826,
    # 2.276771495,
    # 2.310670165,
    # 2.344568834,
    # 2.378467504,
    # 2.412366173,
    # 2.446264843,
    # 2.480163512,
    # 2.503649469,
    # 2.509371154,
    # 2.65,
    # 2.75,
    # 3.0,
    # 4.0,
    # 5.0,
    # 7.0,
    # 10.0,
    # 20.0,
    # 50.0,
    # 100.0,
    # 10000.0])
    # #   y = np.sin(x)
    # y = np.array([0.092282521,
    # 0.092282521,
    # 0.092282521,
    # 0.092282521,
    # 0.092282521,
    # 0.092282521,
    # 0.092282521,
    # 0.108898362,
    # 0.166429569,
    # 0.220299948,
    # 0.281008945,
    # 0.337880945,
    # 0.389410575,
    # 0.459040664,
    # 0.518464217,
    # 0.578526192,
    # 0.629890894,
    # 0.672544117,
    # 0.723541827,
    # 0.778887736,
    # 0.830091701,
    # 0.892335842,
    # 0.945980007,
    # 0.994584051,
    # 1.05696206,
    # 1.106830028,
    # 1.161446822,
    # 1.228899216,
    # 1.290898399,
    # 1.359077526,
    # 1.408090836,
    # 1.465159246,
    # 1.562243494,
    # 1.655088735,
    # 1.697592835,
    # 1.759255085,
    # 1.811679549,
    # 1.859073611,
    # 1.914558511,
    # 1.982617847,
    # 2.036904363,
    # 2.087541557,
    # 2.145242742,
    # 2.194618208,
    # 2.255209854,
    # 2.300621402,
    # 2.344023427,
    # 2.396784052,
    # 2.445120045,
    # 2.495353764,
    # 2.547230542,
    # 2.59005665,
    # 2.643459039,
    # 2.691239423,
    # 2.737428015,
    # 2.785870789,
    # 2.833437265,
    # 2.88173104,
    # 2.92692827,
    # 2.967744011,
    # 3.005373215,
    # 3.041010834,
    # 3.075055183,
    # 3.110692802,
    # 3.137169126,
    # 3.165637035,
    # 3.192511676,
    # 3.215403146,
    # 3.23490892,
    # 3.250829839,
    # 3.270335613,
    # 3.286057374,
    # 3.297397646,
    # 3.30993287,
    # 3.322268935,
    # 3.333011731,
    # 3.342957894,
    # 3.351709104,
    # 3.360261157,
    # 3.367817416,
    # 3.37617031,
    # 3.381336666,
    # 3.386104705,
    # 3.391271062,
    # 3.395242467,
    # 3.402002092,
    # 3.402189484,
    # 3.405762572,
    # 3.4066704527,
    # 3.410319686,
    # 3.410108761,
    # 3.413681849,
    # 3.415661668,
    # 3.418238963,
    # 3.418028038,
    # 3.417817113,
    # 3.417606188,
    # 3.417395263,
    # 3.417184338,
    # 3.416973413,
    # 3.416762488,
    # 3.416551563,
    # 3.416340638,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823,
    # 3.408526823])

    # x = np.array([-100,
    #   -10,
    #   -1,
    #   0,
    #   0.026828855,
    #   0.061012163,
    #   0.095195471,
    #   0.129390802,
    #   0.163601319,
    #   0.19783525,
    #   0.232095125,
    #   0.266361327,
    #   0.300659802,
    #   0.337110351,
    #   0.371665655,
    #   0.403564085,
    #   0.436495224,
    #   0.465399555,
    #   0.514548355,
    #   0.544918292,
    #   0.571192363,
    #   0.59270955,
    #   0.618927127,
    #   0.642745995,
    #   0.66620479,
    #   0.69188684,
    #   0.739707487,
    #   0.76472745,
    #   0.789742192,
    #   0.813204716,
    #   0.8366742,
    #   0.861685462,
    #   0.886707165,
    #   0.911725387,
    #   0.936747091,
    #   0.960198676,
    #   0.985222229,
    #   1.013346631,
    #   1.041475672,
    #   1.06804186,
    #   1.093049642,
    #   1.121175783,
    #   1.152420632,
    #   1.182099998,
    #   1.208656035,
    #   1.238318497,
    #   1.272654306,
    #   1.306992646,
    #   1.341322127,
    #   1.375644648,
    #   1.409964004,
    #   1.444286525,
    #   1.478596389,
    #   1.512902457,
    #   1.547211689,
    #   1.581516492,
    #   1.615813701,
    #   1.650105848,
    #   1.684399893,
    #   1.718689508,
    #   1.752971531,
    #   1.78725735,
    #   1.82154127,
    #   1.855813168,
    #   1.890090128,
    #   1.924355698,
    #   1.958615573,
    #   1.992872284,
    #   2.027130893,
    #   2.061392033,
    #   2.095648111,
    #   2.129901658,
    #   2.16414951,
    #   2.1983923,
    #   2.232637621,
    #   2.266882941,
    #   2.301128262,
    #   2.335369154,
    #   2.369611943,
    #   2.403853467,
    #   2.438098788,
    #   2.467671948,
    #   2.6,
    #   3,
    #   10,
    #   50,
    #   100])

    # y = np.array([0.375722776,
    #   0.375722776,
    #   0.375722776,
    #   0.375722776,
    #   0.375722776,
    #   0.375722776,
    #   0.374275093,
    #   0.376102447,
    #   0.382066689,
    #   0.394408635,
    #   0.413817765,
    #   0.434950599,
    #   0.464874322,
    #   0.494891355,
    #   0.522413413,
    #   0.557058674,
    #   0.595505788,
    #   0.637675307,
    #   0.733645009,
    #   0.775246014,
    #   0.808599425,
    #   0.858889048,
    #   0.898233279,
    #   0.942662941,
    #   0.98307891,
    #   1.0176516,
    #   1.109300279,
    #   1.151661245,
    #   1.192600155,
    #   1.234031877,
    #   1.277359673,
    #   1.317350546,
    #   1.36018553,
    #   1.402072477,
    #   1.44490746,
    #   1.483359638,
    #   1.526698737,
    #   1.568074078,
    #   1.610713468,
    #   1.650948891,
    #   1.689991727,
    #   1.731841086,
    #   1.776591773,
    #   1.818222198,
    #   1.855692513,
    #   1.892718255,
    #   1.932811829,
    #   1.973594884,
    #   2.011964754,
    #   2.04843855,
    #   2.084050494,
    #   2.120524291,
    #   2.15355068,
    #   2.185542846,
    #   2.218396865,
    #   2.250044291,
    #   2.279623273,
    #   2.307823292,
    #   2.336540422,
    #   2.364050959,
    #   2.389493052,
    #   2.415969367,
    #   2.441928572,
    #   2.464612739,
    #   2.488675869,
    #   2.509636333,
    #   2.529045463,
    #   2.547592742,
    #   2.566657132,
    #   2.586411003,
    #   2.604785911,
    #   2.622471338,
    #   2.638605431,
    #   2.653360562,
    #   2.668805174,
    #   2.684249786,
    #   2.699694399,
    #   2.713932418,
    #   2.728687549,
    #   2.743097939,
    #   2.758542551,
    #   2.771242526,
    #   2.771242526,
    #   2.771242526,
    #   2.771242526,
    #   2.771242526,
    #   2.771242526])

    
    inv_TSRdata_eta = np.array([-1000000.0,
                    -100.0,
                    -50.0,
                    -20.0,
                    -10.0,
                    -5.0,
                    -3.0,
                    -1.0,
                    -0.562,
                    -0.17,
                    0.08,
                    0.263603728,
                    0.285361488,
                    0.303031426,
                    0.312196059,
                    0.315338846,
                    0.321228826,
                    0.32568587,
                    0.332745054,
                    0.337165679,
                    0.344625482,
                    0.356436838,
                    0.363274991,
                    0.36907706,
                    0.376260575,
                    0.382753366,
                    0.389798736,
                    0.39763153,
                    0.408171956,
                    0.417358566,
                    0.428092394,
                    0.437458592,
                    0.448874352,
                    0.459423569,
                    0.472478225,
                    0.485210544,
                    0.496411761,
                    0.511279564,
                    0.523608961,
                    0.538073843,
                    0.55573792,
                    0.571320621,
                    0.587069095,
                    0.608826855,
                    0.632035133,
                    0.658144445,
                    0.688605309,
                    0.720516691,
                    0.752428072,
                    0.784339454,
                    0.816250835,
                    0.848162217,
                    0.880073598,
                    0.91198498,
                    0.943896361,
                    0.975807743,
                    1.007719124,
                    1.039630506,
                    1.071541888,
                    1.103453269,
                    1.135364651,
                    1.167276032,
                    1.199187414,
                    1.231098795,
                    1.263010177,
                    1.294921558,
                    1.32683294,
                    1.358744321,
                    1.390655703,
                    1.422567085,
                    1.454478466,
                    1.486389848,
                    1.518301229,
                    1.550212611,
                    1.582123992,
                    1.614035374,
                    1.645946755,
                    1.677858137,
                    1.709769518,
                    1.7416809,
                    1.773592282,
                    1.805503663,
                    1.837415045,
                    1.869326426,
                    1.901237808,
                    1.933149189,
                    1.965060571,
                    1.996971952,
                    2.057893681,
                    2.089805062,
                    2.121716444,
                    2.153627825,
                    2.185539207,
                    2.217450589,
                    2.281273352,
                    2.345096115,
                    2.408918878,
                    2.469840606,
                    3.27,
                    5.0,
                    10.0,
                    20.0,
                    50.0,
                    100.0,
                    1000000.0])
    eta_data = np.array([0.003429765,  
              0.003429765,
              0.003429765,
              0.003429765,
              0.003429765,
              0.003429765,
              0.003429765,
              0.003429765,
              0.0065,
              0.011477158,
              0.03,
              0.075190746,
              0.109436258,
              0.133695731,
              0.147823096,
              0.155766371,
              0.163040511,
              0.173411038,
              0.183500092,
              0.191855048,
              0.199981875,
              0.217788488,
              0.225356447,
              0.233872485,
              0.243477412,
              0.252925278,
              0.261402283,
              0.269837529,
              0.278543469,
              0.287291074,
              0.297463119,
              0.305032595,
              0.313937652,
              0.323279961,
              0.33256815,
              0.341011385,
              0.348811865,
              0.357759094,
              0.364826008,
              0.372254637,
              0.379637054,
              0.386450734,
              0.393406272,
              0.400963161,
              0.40850769,
              0.414986945,
              0.422387209,
              0.42837799,
              0.432588372,
              0.436196157,
              0.439858725,
              0.442261318,
              0.443842188,
              0.445368277,
              0.446593068,
              0.446996136,
              0.446577483,
              0.446323173,
              0.445082797,
              0.444143719,
              0.442136402,
              0.440539946,
              0.438258721,
              0.435867934,
              0.433093676,
              0.430319418,
              0.427736895,
              0.42468873,
              0.421996644,
              0.419058041,
              0.416420737,
              0.413536916,
              0.410680486,
              0.408180135,
              0.405679785,
              0.402987699,
              0.400213441,
              0.397658309,
              0.394938833,
              0.392246747,
              0.389664224,
              0.386753012,
              0.384225271,
              0.381752311,
              0.379251961,
              0.376724219,
              0.374196478,
              0.371696128,
              0.367054705,
              0.36477348,
              0.362245739,
              0.359854951,
              0.357546336,
              0.352901715,
              0.348065358,
              0.343338564,
              0.338748725,
              0.33688156,
              0.33688156,
              0.33688156,
              0.33688156,
              0.33688156,
              0.33688156,
              0.33688156,
              0.33688156])

    x = inv_TSRdata_eta
    y = eta_data
    xs = np.linspace(-10, 10, 10001)
    ys = interp(x, y, xs)
    #   Ys = integ(x, y, xs)
    P.scatter(x, y, label='Samples', color='purple')
    P.plot(xs, ys, label='Interpolated curve')
    # P.plot(xs, np.sin(xs), '--', label='True Curve')
    #   P.plot(xs, Ys, label='Spline Integral')
    #   P.plot(xs, 1-xs.cos(), '--', label='True Integral')
    P.xlim([-10,10])
    P.legend()
    P.show()